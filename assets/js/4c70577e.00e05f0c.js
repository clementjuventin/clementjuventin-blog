"use strict";(self.webpackChunkpersonal_website=self.webpackChunkpersonal_website||[]).push([[89],{6946:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var o=n(9707),i=n(3420),a=n(8906);const r={slug:"opal-technical-overview",title:"Opal - Technical Overview",authors:"clementjuventin",tags:[]},l=void 0,s={authorsImageUrls:[void 0]},c=[];function p(e){const t={a:"a",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["In this article, I\u2019ll dive into the technical underpinnings of the Opal protocol, a project I\u2019ve contributed to extensively. If you haven\u2019t yet read the previous article about Opal, I recommend starting ",(0,i.jsx)(t.a,{href:"/opal",children:"there"})," to better understand the context of what follows."]}),"\n",(0,i.jsxs)(t.p,{children:["Here, we\u2019ll focus on two of the protocol\u2019s most important smart contracts: the ",(0,i.jsx)(t.strong,{children:"Omnipool"})," and the ",(0,i.jsx)(t.strong,{children:"Reward Manager"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"The Omnipool is the core of the protocol\u2014it\u2019s a single-asset liquidity pool that can dynamically rebalance and reallocate funds across different strategies. It lies at the heart of Opal\u2019s yield-generation mechanism and represents the foundation of the platform's financial logic."}),"\n",(0,i.jsx)(t.p,{children:"The second contract, the Reward Manager, is one I developed almost entirely independently. Its role is to handle the distribution of rewards to users participating in the Omnipool. I find the mathematical model behind it particularly elegant and effective. While similar systems are likely common and well-studied in DeFi, in this article, we\u2019ll take a closer look at Opal\u2019s unique implementation."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8906:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var o=n(6672);const i={},a=o.createContext(i);function r(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:t},e.children)}},9707:e=>{e.exports=JSON.parse('{"permalink":"/opal-technical-overview","source":"@site/blog/2025-01-23-opal-technical-overview.md","title":"Opal - Technical Overview","description":"In this article, I\u2019ll dive into the technical underpinnings of the Opal protocol, a project I\u2019ve contributed to extensively. If you haven\u2019t yet read the previous article about Opal, I recommend starting there to better understand the context of what follows.","date":"2025-01-23T00:00:00.000Z","tags":[],"readingTime":0.85,"hasTruncateMarker":true,"authors":[{"name":"Cl\xe9ment Juventin","title":"Internet traveler \ud83e\udd16\u200b","url":"https://linkedin.com/in/cl\xe9ment-juventin-ab81841a3/","page":{"permalink":"/authors/clementjuventin"},"socials":{"linkedin":"https://www.linkedin.com/in/clementjuventin/","github":"https://github.com/clementjuventin"},"imageURL":"https://github.com/clementjuventin.png","key":"clementjuventin"}],"frontMatter":{"slug":"opal-technical-overview","title":"Opal - Technical Overview","authors":"clementjuventin","tags":[]},"unlisted":false,"prevItem":{"title":"From A Nooby Degen to a Bloodthirsty Sniper","permalink":"/degen-to-sniper"},"nextItem":{"title":"Opal - Yield DApp built on top of Balancer","permalink":"/opal"}}')}}]);